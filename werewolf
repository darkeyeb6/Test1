local plr = game.Players.LocalPlayer

-- Function to stop animations
local function StopAnim()
    for _, track in pairs(plr.Character.Humanoid:GetPlayingAnimationTracks()) do
        track:Stop()
    end
end

-- Function to change the animations
local function changeAnimation(animationIds)
    local Animate = plr.Character:FindFirstChild("Animate")
    if Animate then
        Animate.Disabled = true
        StopAnim()
        Animate.idle.Animation1.AnimationId = animationIds.Idle1
        Animate.idle.Animation2.AnimationId = animationIds.Idle2
        Animate.walk.WalkAnim.AnimationId = animationIds.Walk
        Animate.run.RunAnim.AnimationId = animationIds.Run
        Animate.jump.JumpAnim.AnimationId = animationIds.Jump
        Animate.climb.ClimbAnim.AnimationId = animationIds.Climb
        Animate.fall.FallAnim.AnimationId = animationIds.Fall
        Animate.swim.Swim.AnimationId = animationIds.Swim
        Animate.swimidle.SwimIdle.AnimationId = animationIds.SwimIdle
        Animate.Disabled = false
    end
end

-- Function to handle character respawn or reset
local function onCharacterAdded(character)
    -- Wait for the humanoid to load
    repeat wait() until character:FindFirstChild("Humanoid")

    -- Apply the custom animation each time the character spawns or resets
    changeAnimation({
		Idle1 = "rbxassetid://1083195517";
		Idle2 = "rbxassetid://1083214717";
		Walk = "rbxassetid://1083178339";
		Run = "rbxassetid://1083216690";
		Fall = "rbxassetid://1083189019";
		Jump = "rbxassetid://1083218792";
		Climb = "rbxassetid://1083182000";
		Swim = "rbxassetid://1083222527";
		SwimIdle = "rbxassetid://1083222527"
    })
end

-- Listen for character respawn or reset
plr.CharacterAdded:Connect(onCharacterAdded)

-- If the character already exists, apply the animation immediately
if plr.Character then
    onCharacterAdded(plr.Character)
end
